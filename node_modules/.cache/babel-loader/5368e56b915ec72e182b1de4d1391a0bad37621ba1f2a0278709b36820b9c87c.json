{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willy\\\\ransomwareprotect\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Importing axios only once\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  var _questions$currentQue, _questions$currentQue2;\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  // Fetch questions when the component mounts\n  useEffect(() => {\n    axios.get('/api/questions').then(response => {\n      setQuestions(response.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // Handle answer submission\n  const handleAnswer = selectedAnswer => {\n    const correctAnswer = questions[currentQuestion].correctAnswer;\n    if (selectedAnswer === correctAnswer) {\n      setScore(score + 1);\n    }\n\n    // Update progress bar\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n      setProgress((nextQuestion + 1) / questions.length * 100);\n    } else {\n      setIsQuizComplete(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cybersecurity Ransomware Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !isQuizComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_questions$currentQue = questions[currentQuestion]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: (_questions$currentQue2 = questions[currentQuestion]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(answer),\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"R1/oWZxJGqY4b8R4LczF8vJMFqs=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","QuizPage","_s","_questions$currentQue","_questions$currentQue2","questions","setQuestions","answers","setAnswers","score","setScore","currentQuestion","setCurrentQuestion","isQuizComplete","setIsQuizComplete","progress","setProgress","get","then","response","data","catch","err","console","log","handleAnswer","selectedAnswer","correctAnswer","nextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","map","answer","index","onClick","style","width","_c","$RefreshReg$"],"sources":["C:/Users/willy/ransomwareprotect/src/components/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';  // Importing axios only once\r\n\r\nconst QuizPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  // Fetch questions when the component mounts\r\n  useEffect(() => {\r\n    axios.get('/api/questions')\r\n      .then(response => {\r\n        setQuestions(response.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  // Handle answer submission\r\n  const handleAnswer = (selectedAnswer) => {\r\n    const correctAnswer = questions[currentQuestion].correctAnswer;\r\n\r\n    if (selectedAnswer === correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    // Update progress bar\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n      setProgress(((nextQuestion + 1) / questions.length) * 100);\r\n    } else {\r\n      setIsQuizComplete(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1>Cybersecurity Ransomware Quiz</h1>\r\n      {!isQuizComplete ? (\r\n        <div>\r\n          <p>{questions[currentQuestion]?.question}</p>\r\n          <div className=\"options\">\r\n            {questions[currentQuestion]?.answers.map((answer, index) => (\r\n              <button key={index} onClick={() => handleAnswer(answer)}>\r\n                {answer}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>Your Score: {score}/{questions.length}</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;;EAE3C;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACmB,GAAG,CAAC,gBAAgB,CAAC,CACxBC,IAAI,CAACC,QAAQ,IAAI;MAChBb,YAAY,CAACa,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,YAAY,GAAIC,cAAc,IAAK;IACvC,MAAMC,aAAa,GAAGtB,SAAS,CAACM,eAAe,CAAC,CAACgB,aAAa;IAE9D,IAAID,cAAc,KAAKC,aAAa,EAAE;MACpCjB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;;IAEA;IACA,MAAMmB,YAAY,GAAGjB,eAAe,GAAG,CAAC;IACxC,IAAIiB,YAAY,GAAGvB,SAAS,CAACwB,MAAM,EAAE;MACnCjB,kBAAkB,CAACgB,YAAY,CAAC;MAChCZ,WAAW,CAAE,CAACY,YAAY,GAAG,CAAC,IAAIvB,SAAS,CAACwB,MAAM,GAAI,GAAG,CAAC;IAC5D,CAAC,MAAM;MACLf,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EAED,oBACEd,OAAA;IAAK8B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B/B,OAAA;MAAA+B,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrC,CAACtB,cAAc,gBACdb,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,GAAA5B,qBAAA,GAAIE,SAAS,CAACM,eAAe,CAAC,cAAAR,qBAAA,uBAA1BA,qBAAA,CAA4BiC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7CnC,OAAA;QAAK8B,SAAS,EAAC,SAAS;QAAAC,QAAA,GAAA3B,sBAAA,GACrBC,SAAS,CAACM,eAAe,CAAC,cAAAP,sBAAA,uBAA1BA,sBAAA,CAA4BG,OAAO,CAAC8B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACrDvC,OAAA;UAAoBwC,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACa,MAAM,CAAE;UAAAP,QAAA,EACrDO;QAAM,GADIC,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,cAAc;QAACW,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAG3B,QAAQ;QAAI;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,gBAENnC,OAAA;MAAA+B,QAAA,eACE/B,OAAA;QAAA+B,QAAA,GAAI,cAAY,EAACtB,KAAK,EAAC,GAAC,EAACJ,SAAS,CAACwB,MAAM;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CAzDID,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AA2Dd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}