{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willy\\\\ransomwareprotect\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './QuizPage.css'; // Import CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  var _questions$currentQue2, _questions$currentQue3;\n  const [questions] = useState([{\n    id: 1,\n    question: \"What is ransomware in the context of healthcare?\",\n    options: [\"A medical billing error\", \"A cyberattack that encrypts healthcare data and demands payment\", \"A type of virus that causes data loss\", \"A method of patient data archiving\"],\n    correct: 1\n  }, {\n    id: 2,\n    question: \"Why is the healthcare industry a prime target for ransomware?\",\n    options: [\"Healthcare staff are tech-savvy\", \"Hospitals have limited cybersecurity\", \"Patient data is not valuable\", \"Medical devices are immune to malware\"],\n    correct: 1\n  }, {\n    id: 3,\n    question: \"What kind of data do ransomware attackers often seek in hospitals?\",\n    options: [\"Employee payroll\", \"Marketing materials\", \"Electronic Health Records (EHR)\", \"Cafeteria menus\"],\n    correct: 2\n  }, {\n    id: 4,\n    question: \"What is a common way ransomware enters healthcare systems?\",\n    options: [\"Paper charts\", \"Encrypted files\", \"Phishing emails to hospital staff\", \"Secured databases\"],\n    correct: 2\n  }, {\n    id: 5,\n    question: \"What should hospital IT staff do during a ransomware attack?\",\n    options: [\"Pay the ransom quickly\", \"Shut down systems and notify security teams\", \"Ignore the alert\", \"Delete random files\"],\n    correct: 1\n  }, {\n    id: 6,\n    question: \"Which of the following best prevents ransomware attacks in hospitals?\",\n    options: [\"Disabling antivirus\", \"Regular staff training and data backups\", \"Sharing login credentials\", \"Avoiding system updates\"],\n    correct: 1\n  }, {\n    id: 7,\n    question: \"Which healthcare-related ransomware attack was globally infamous?\",\n    options: [\"Heartbleed\", \"WannaCry\", \"Stuxnet\", \"Petya\"],\n    correct: 1\n  }, {\n    id: 8,\n    question: \"What is the risk of paying the ransom?\",\n    options: [\"Patients may become aware\", \"Hackers might not decrypt the data\", \"Hospitals get a tax refund\", \"Payment always guarantees full recovery\"],\n    correct: 1\n  }, {\n    id: 9,\n    question: \"How can hospitals reduce downtime during ransomware attacks?\",\n    options: [\"Use of daily data backups and disaster recovery plans\", \"Turning off all computers\", \"Only using paper records\", \"Ignoring security alerts\"],\n    correct: 0\n  }, {\n    id: 10,\n    question: \"What should be part of every hospital's ransomware response plan?\",\n    options: [\"Silence from IT\", \"Paying in cryptocurrency\", \"A tested incident response and recovery plan\", \"Hiring more nurses\"],\n    correct: 2\n  }]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const navigate = useNavigate();\n\n  // Handle answer submission\n  const handleAnswer = selectedAnswer => {\n    var _questions$currentQue;\n    const correctAnswer = (_questions$currentQue = questions[currentQuestion]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.correct;\n    if (selectedAnswer === correctAnswer) {\n      setScore(prevScore => prevScore + 1); // Correct way to update score\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n      setProgress((nextQuestion + 1) / questions.length * 100);\n    } else {\n      setIsQuizComplete(true);\n    }\n  };\n\n  // Submit quiz results\n  const submitQuiz = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/quiz/results', {\n        score\n      });\n      alert(`You scored ${score} out of ${questions.length}!`);\n      navigate('/');\n    } catch (error) {\n      console.error(\"Error submitting quiz results\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cybersecurity Ransomware Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), !isQuizComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_questions$currentQue2 = questions[currentQuestion]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: (_questions$currentQue3 = questions[currentQuestion]) === null || _questions$currentQue3 === void 0 ? void 0 : _questions$currentQue3.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(index),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) //progress bar above\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), score < 5 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"improve-message\",\n        children: \"You need to improve your ransomware awareness. Review the material and try again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), score >= 5 && score < 7 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"medium-score-message\",\n        children: \"You're getting there! Review a few key areas to boost your ransomware knowledge.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), score >= 7 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"well-done-message\",\n        children: \"Well done! You have a strong understanding of ransomware in healthcare.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitQuiz,\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"G2cgbWx8/yUJXz76r49wKvq4AEg=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","QuizPage","_s","_questions$currentQue2","_questions$currentQue3","questions","id","question","options","correct","currentQuestion","setCurrentQuestion","score","setScore","isQuizComplete","setIsQuizComplete","progress","setProgress","navigate","handleAnswer","selectedAnswer","_questions$currentQue","correctAnswer","prevScore","nextQuestion","length","submitQuiz","post","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","style","width","_c","$RefreshReg$"],"sources":["C:/Users/willy/ransomwareprotect/src/components/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './QuizPage.css'; // Import CSS\r\n\r\nfunction QuizPage() {\r\n  const [questions] = useState([\r\n    {\r\n      id: 1,\r\n      question: \"What is ransomware in the context of healthcare?\",\r\n      options: [\r\n        \"A medical billing error\",\r\n        \"A cyberattack that encrypts healthcare data and demands payment\",\r\n        \"A type of virus that causes data loss\",\r\n        \"A method of patient data archiving\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"Why is the healthcare industry a prime target for ransomware?\",\r\n      options: [\r\n        \"Healthcare staff are tech-savvy\",\r\n        \"Hospitals have limited cybersecurity\",\r\n        \"Patient data is not valuable\",\r\n        \"Medical devices are immune to malware\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"What kind of data do ransomware attackers often seek in hospitals?\",\r\n      options: [\r\n        \"Employee payroll\",\r\n        \"Marketing materials\",\r\n        \"Electronic Health Records (EHR)\",\r\n        \"Cafeteria menus\"\r\n      ],\r\n      correct: 2\r\n    },\r\n    {\r\n      id: 4,\r\n      question: \"What is a common way ransomware enters healthcare systems?\",\r\n      options: [\r\n        \"Paper charts\",\r\n        \"Encrypted files\",\r\n        \"Phishing emails to hospital staff\",\r\n        \"Secured databases\"\r\n      ],\r\n      correct: 2\r\n    },\r\n    {\r\n      id: 5,\r\n      question: \"What should hospital IT staff do during a ransomware attack?\",\r\n      options: [\r\n        \"Pay the ransom quickly\",\r\n        \"Shut down systems and notify security teams\",\r\n        \"Ignore the alert\",\r\n        \"Delete random files\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      id: 6,\r\n      question: \"Which of the following best prevents ransomware attacks in hospitals?\",\r\n      options: [\r\n        \"Disabling antivirus\",\r\n        \"Regular staff training and data backups\",\r\n        \"Sharing login credentials\",\r\n        \"Avoiding system updates\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      id: 7,\r\n      question: \"Which healthcare-related ransomware attack was globally infamous?\",\r\n      options: [\r\n        \"Heartbleed\",\r\n        \"WannaCry\",\r\n        \"Stuxnet\",\r\n        \"Petya\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      id: 8,\r\n      question: \"What is the risk of paying the ransom?\",\r\n      options: [\r\n        \"Patients may become aware\",\r\n        \"Hackers might not decrypt the data\",\r\n        \"Hospitals get a tax refund\",\r\n        \"Payment always guarantees full recovery\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      id: 9,\r\n      question: \"How can hospitals reduce downtime during ransomware attacks?\",\r\n      options: [\r\n        \"Use of daily data backups and disaster recovery plans\",\r\n        \"Turning off all computers\",\r\n        \"Only using paper records\",\r\n        \"Ignoring security alerts\"\r\n      ],\r\n      correct: 0\r\n    },\r\n    {\r\n      id: 10,\r\n      question: \"What should be part of every hospital's ransomware response plan?\",\r\n      options: [\r\n        \"Silence from IT\",\r\n        \"Paying in cryptocurrency\",\r\n        \"A tested incident response and recovery plan\",\r\n        \"Hiring more nurses\"\r\n      ],\r\n      correct: 2\r\n    }\r\n  ]);\r\n  \r\n\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle answer submission\r\n  const handleAnswer = (selectedAnswer) => {\r\n    const correctAnswer = questions[currentQuestion]?.correct;\r\n    \r\n    if (selectedAnswer === correctAnswer) {\r\n      setScore(prevScore => prevScore + 1); // Correct way to update score\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n      setProgress(((nextQuestion + 1) / questions.length) * 100);\r\n    } else {\r\n      setIsQuizComplete(true);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  // Submit quiz results\r\n  const submitQuiz = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/quiz/results', { score });\r\n      alert(`You scored ${score} out of ${questions.length}!`);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error(\"Error submitting quiz results\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1>Cybersecurity Ransomware Quiz</h1>\r\n      {!isQuizComplete ? (\r\n        <div>\r\n          <p>{questions[currentQuestion]?.question}</p>\r\n          <div className=\"options\">\r\n            {questions[currentQuestion]?.options.map((option, index) => (\r\n              <button key={index} onClick={() => handleAnswer(index)}>\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"progress-bar-container\">\r\n            <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\r\n          </div>\r\n            \r\n        </div> //progress bar above\r\n      ) : ( \r\n        <div>\r\n          <h2>Your Score: {score}/{questions.length}</h2>\r\n          {score < 5 && (\r\n          <p className=\"improve-message\">\r\n          You need to improve your ransomware awareness. Review the material and try again!\r\n          </p>\r\n          )}\r\n\r\n          {score >= 5 && score < 7 && (\r\n          <p className=\"medium-score-message\">\r\n          You're getting there! Review a few key areas to boost your ransomware knowledge.\r\n          </p>\r\n          )}\r\n\r\n          {score >= 7 && (\r\n          <p className=\"well-done-message\">\r\n          Well done! You have a strong understanding of ransomware in healthcare.\r\n          </p>\r\n          )}\r\n          <button onClick={submitQuiz}>Submit Quiz</button>\r\n          <button onClick={() => navigate('/')}>Return to Home</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n  \r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}