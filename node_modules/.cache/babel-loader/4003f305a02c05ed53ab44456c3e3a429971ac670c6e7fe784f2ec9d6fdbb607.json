{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willy\\\\ransomwareprotect\\\\src\\\\components\\\\QuizPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './QuizPage.css'; // Import CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [questions] = useState([{\n    id: 1,\n    question: \"What is ransomware?\",\n    options: [\"A computer virus\", \"A scam\", \"A type of malware that locks files\", \"None of the above\"],\n    correct: 2\n  }, {\n    id: 2,\n    question: \"How can you prevent ransomware?\",\n    options: [\"Backup your data\", \"Disable antivirus\", \"Click on suspicious emails\", \"Ignore updates\"],\n    correct: 0\n  }, {\n    id: 3,\n    question: \"What does ransomware typically do?\",\n    options: [\"Deletes all your files\", \"Encrypts your files and demands payment\", \"Speeds up your PC\", \"Creates new files\"],\n    correct: 1\n  }, {\n    id: 4,\n    question: \"What should you do if you become a victim of ransomware?\",\n    options: [\"Pay the ransom immediately\", \"Disconnect from the internet and report it\", \"Restart your computer\", \"Ignore it\"],\n    correct: 1\n  }, {\n    id: 5,\n    question: \"Which method do hackers use to spread ransomware?\",\n    options: [\"Malicious email attachments\", \"Phone calls\", \"Social media likes\", \"Antivirus programs\"],\n    correct: 0\n  }, {\n    id: 6,\n    question: \"Which is a common type of ransomware?\",\n    options: [\"Trojan horse\", \"WannaCry\", \"Adware\", \"Spyware\"],\n    correct: 1\n  }, {\n    id: 7,\n    question: \"What is the best way to recover from a ransomware attack?\",\n    options: [\"Pay the ransom\", \"Use a backup\", \"Wait for the hacker to remove it\", \"Restart your PC\"],\n    correct: 1\n  }, {\n    id: 8,\n    question: \"Which file type is most dangerous when attached to an email?\",\n    options: [\".txt\", \".exe\", \".pdf\", \".jpg\"],\n    correct: 1\n  }, {\n    id: 9,\n    question: \"What is a good security practice to prevent ransomware?\",\n    options: [\"Downloading files from unknown websites\", \"Using strong, unique passwords\", \"Disabling firewall\", \"Sharing passwords\"],\n    correct: 1\n  }, {\n    id: 10,\n    question: \"What is the main goal of ransomware?\",\n    options: [\"Destroying files\", \"Stealing credit card data\", \"Encrypting files and demanding ransom\", \"Speeding up your computer\"],\n    correct: 2\n  }]);\n  const [answers, setAnswers] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const navigate = useNavigate();\n  const QuizPage = () => {\n    _s();\n    var _questions$currentQue2, _questions$currentQue3;\n    const [questions, setQuestions] = useState([]);\n    const [answers, setAnswers] = useState([]);\n    const [score, setScore] = useState(0); // Declare score here\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [isQuizComplete, setIsQuizComplete] = useState(false);\n    const [progress, setProgress] = useState(0);\n\n    // Fetch questions when the component mounts\n    useEffect(() => {\n      axios.get('/api/questions').then(response => {\n        setQuestions(response.data);\n      }).catch(err => console.log(err));\n    }, []);\n\n    // Handle answer submission\n    const handleAnswer = selectedAnswer => {\n      var _questions$currentQue;\n      const correctAnswer = (_questions$currentQue = questions[currentQuestion]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.correctAnswer;\n      if (selectedAnswer === correctAnswer) {\n        setScore(score + 1); // Update score if answer is correct\n      }\n\n      // Update progress bar\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n        setProgress((nextQuestion + 1) / questions.length * 100);\n      } else {\n        setIsQuizComplete(true);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cybersecurity Ransomware Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), !isQuizComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_questions$currentQue2 = questions[currentQuestion]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: (_questions$currentQue3 = questions[currentQuestion]) === null || _questions$currentQue3 === void 0 ? void 0 : _questions$currentQue3.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswer(answer),\n            children: answer\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Score: \", score, \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n  _s(QuizPage, \"R1/oWZxJGqY4b8R4LczF8vJMFqs=\");\n  const handleAnswer = answerIndex => {\n    setAnswers([...answers, answerIndex]);\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      submitQuiz();\n    }\n  };\n  const submitQuiz = async () => {\n    const score = answers.filter((answer, index) => answer === questions[index].correct).length;\n    try {\n      await axios.post('http://localhost:5000/api/quiz/results', {\n        score\n      });\n      alert(`You scored ${score} out of ${questions.length}!`);\n      navigate('/');\n    } catch (error) {\n      console.error(\"Error submitting quiz results\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questions[currentQuestion].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"quiz-options\",\n      children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleAnswer(index),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitQuiz,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s2(QuizPage, \"4XyVGBWOhE7h4ryMIBf47b5+AXI=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizPage;\nconst submitQuiz = async () => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/quiz/results', {\n      score: score\n    });\n    console.log('Quiz Submitted', response.data);\n  } catch (error) {\n    console.error('Error submitting quiz', error);\n  }\n};\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","QuizPage","_s2","_s","$RefreshSig$","questions","id","question","options","correct","answers","setAnswers","currentQuestion","setCurrentQuestion","navigate","_questions$currentQue2","_questions$currentQue3","setQuestions","score","setScore","isQuizComplete","setIsQuizComplete","progress","setProgress","useEffect","get","then","response","data","catch","err","console","log","handleAnswer","selectedAnswer","_questions$currentQue","correctAnswer","nextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","answer","index","onClick","style","width","answerIndex","submitQuiz","filter","post","alert","error","option","_c","$RefreshReg$"],"sources":["C:/Users/willy/ransomwareprotect/src/components/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './QuizPage.css'; // Import CSS\r\n\r\nfunction QuizPage() {\r\n  const [questions] = useState([\r\n    { \r\n      id: 1, \r\n      question: \"What is ransomware?\", \r\n      options: [\"A computer virus\", \"A scam\", \"A type of malware that locks files\", \"None of the above\"], \r\n      correct: 2 \r\n    },\r\n    { \r\n      id: 2, \r\n      question: \"How can you prevent ransomware?\", \r\n      options: [\"Backup your data\", \"Disable antivirus\", \"Click on suspicious emails\", \"Ignore updates\"], \r\n      correct: 0 \r\n    },\r\n    { \r\n      id: 3, \r\n      question: \"What does ransomware typically do?\", \r\n      options: [\"Deletes all your files\", \"Encrypts your files and demands payment\", \"Speeds up your PC\", \"Creates new files\"], \r\n      correct: 1 \r\n    },\r\n    { \r\n      id: 4, \r\n      question: \"What should you do if you become a victim of ransomware?\", \r\n      options: [\"Pay the ransom immediately\", \"Disconnect from the internet and report it\", \"Restart your computer\", \"Ignore it\"], \r\n      correct: 1 \r\n    },\r\n    { \r\n      id: 5, \r\n      question: \"Which method do hackers use to spread ransomware?\", \r\n      options: [\"Malicious email attachments\", \"Phone calls\", \"Social media likes\", \"Antivirus programs\"], \r\n      correct: 0 \r\n    },\r\n    { \r\n      id: 6, \r\n      question: \"Which is a common type of ransomware?\", \r\n      options: [\"Trojan horse\", \"WannaCry\", \"Adware\", \"Spyware\"], \r\n      correct: 1 \r\n    },\r\n    { \r\n      id: 7, \r\n      question: \"What is the best way to recover from a ransomware attack?\", \r\n      options: [\"Pay the ransom\", \"Use a backup\", \"Wait for the hacker to remove it\", \"Restart your PC\"], \r\n      correct: 1 \r\n    },\r\n    { \r\n      id: 8, \r\n      question: \"Which file type is most dangerous when attached to an email?\", \r\n      options: [\".txt\", \".exe\", \".pdf\", \".jpg\"], \r\n      correct: 1 \r\n    },\r\n    { \r\n      id: 9, \r\n      question: \"What is a good security practice to prevent ransomware?\", \r\n      options: [\"Downloading files from unknown websites\", \"Using strong, unique passwords\", \"Disabling firewall\", \"Sharing passwords\"], \r\n      correct: 1 \r\n    },\r\n    { \r\n      id: 10, \r\n      question: \"What is the main goal of ransomware?\", \r\n      options: [\"Destroying files\", \"Stealing credit card data\", \"Encrypting files and demanding ransom\", \"Speeding up your computer\"], \r\n      correct: 2 \r\n    }\r\n  ]);\r\n\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  const QuizPage = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [answers, setAnswers] = useState([]);\r\n    const [score, setScore] = useState(0); // Declare score here\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [isQuizComplete, setIsQuizComplete] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n  \r\n    // Fetch questions when the component mounts\r\n    useEffect(() => {\r\n      axios.get('/api/questions')\r\n        .then(response => {\r\n          setQuestions(response.data);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n  \r\n    // Handle answer submission\r\n    const handleAnswer = (selectedAnswer) => {\r\n      const correctAnswer = questions[currentQuestion]?.correctAnswer;\r\n  \r\n      if (selectedAnswer === correctAnswer) {\r\n        setScore(score + 1); // Update score if answer is correct\r\n      }\r\n  \r\n      // Update progress bar\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n        setProgress(((nextQuestion + 1) / questions.length) * 100);\r\n      } else {\r\n        setIsQuizComplete(true);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <h1>Cybersecurity Ransomware Quiz</h1>\r\n        {!isQuizComplete ? (\r\n          <div>\r\n            <p>{questions[currentQuestion]?.question}</p>\r\n            <div className=\"options\">\r\n              {questions[currentQuestion]?.answers.map((answer, index) => (\r\n                <button key={index} onClick={() => handleAnswer(answer)}>\r\n                  {answer}\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>Your Score: {score}/{questions.length}</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleAnswer = (answerIndex) => {\r\n    setAnswers([...answers, answerIndex]);\r\n    if (currentQuestion + 1 < questions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      submitQuiz();\r\n    }\r\n  };\r\n\r\n  const submitQuiz = async () => {\r\n    const score = answers.filter((answer, index) => answer === questions[index].correct).length;\r\n    try {\r\n      await axios.post('http://localhost:5000/api/quiz/results', { score });\r\n      alert(`You scored ${score} out of ${questions.length}!`);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error(\"Error submitting quiz results\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      <h2>{questions[currentQuestion].question}</h2>\r\n      <ul className=\"quiz-options\">\r\n        {questions[currentQuestion].options.map((option, index) => (\r\n          <li key={index} onClick={() => handleAnswer(index)}>\r\n            {option}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={submitQuiz}>Submit Quiz</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst submitQuiz = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/quiz/results', {\r\n        score: score\r\n      });\r\n      console.log('Quiz Submitted', response.data);\r\n    } catch (error) {\r\n      console.error('Error submitting quiz', error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}