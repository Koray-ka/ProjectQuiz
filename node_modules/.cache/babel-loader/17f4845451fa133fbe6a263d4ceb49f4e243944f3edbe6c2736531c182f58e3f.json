{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willy\\\\ransomwareprotect\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './QuizPage.css'; // Import CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const [questions] = useState([{\n    id: 1,\n    question: \"What is ransomware?\",\n    options: [\"A computer virus\", \"A scam\", \"A type of malware that locks files\", \"None of the above\"],\n    correct: 2\n  }, {\n    id: 2,\n    question: \"How can you prevent ransomware?\",\n    options: [\"Backup your data\", \"Disable antivirus\", \"Click on suspicious emails\", \"Ignore updates\"],\n    correct: 0\n  }, {\n    id: 3,\n    question: \"What does ransomware typically do?\",\n    options: [\"Deletes all your files\", \"Encrypts your files and demands payment\", \"Speeds up your PC\", \"Creates new files\"],\n    correct: 1\n  }, {\n    id: 4,\n    question: \"What should you do if you become a victim of ransomware?\",\n    options: [\"Pay the ransom immediately\", \"Disconnect from the internet and report it\", \"Restart your computer\", \"Ignore it\"],\n    correct: 1\n  }, {\n    id: 5,\n    question: \"Which method do hackers use to spread ransomware?\",\n    options: [\"Malicious email attachments\", \"Phone calls\", \"Social media likes\", \"Antivirus programs\"],\n    correct: 0\n  }]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const navigate = useNavigate();\n  const handleAnswer = answerIndex => {\n    if (answerIndex === questions[currentQuestion].correct) {\n      setScore(score + 1); // Increase score for correct answers\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n      submitQuiz();\n    }\n  };\n  const submitQuiz = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/quiz/results', {\n        score\n      });\n    } catch (error) {\n      console.error(\"Error submitting quiz results\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Go Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${(currentQuestion + 1) / questions.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"quiz-options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleAnswer(index),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"IyZhNvwMUD3+ptqaaC+34ttzn/g=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizPage","_s","questions","id","question","options","correct","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","navigate","handleAnswer","answerIndex","nextQuestion","length","submitQuiz","post","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","map","option","index","_c","$RefreshReg$"],"sources":["C:/Users/willy/ransomwareprotect/src/components/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './QuizPage.css'; // Import CSS\r\n\r\nfunction QuizPage() {\r\n  const [questions] = useState([\r\n    { \r\n      id: 1, \r\n      question: \"What is ransomware?\", \r\n      options: [\"A computer virus\", \"A scam\", \"A type of malware that locks files\", \"None of the above\"], \r\n      correct: 2 \r\n    },\r\n    { \r\n      id: 2, \r\n      question: \"How can you prevent ransomware?\", \r\n      options: [\"Backup your data\", \"Disable antivirus\", \"Click on suspicious emails\", \"Ignore updates\"], \r\n      correct: 0 \r\n    },\r\n    { \r\n      id: 3, \r\n      question: \"What does ransomware typically do?\", \r\n      options: [\"Deletes all your files\", \"Encrypts your files and demands payment\", \"Speeds up your PC\", \"Creates new files\"], \r\n      correct: 1 \r\n    },\r\n    { \r\n      id: 4, \r\n      question: \"What should you do if you become a victim of ransomware?\", \r\n      options: [\"Pay the ransom immediately\", \"Disconnect from the internet and report it\", \"Restart your computer\", \"Ignore it\"], \r\n      correct: 1 \r\n    },\r\n    { \r\n      id: 5, \r\n      question: \"Which method do hackers use to spread ransomware?\", \r\n      options: [\"Malicious email attachments\", \"Phone calls\", \"Social media likes\", \"Antivirus programs\"], \r\n      correct: 0 \r\n    }\r\n  ]);\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleAnswer = (answerIndex) => {\r\n    if (answerIndex === questions[currentQuestion].correct) {\r\n      setScore(score + 1); // Increase score for correct answers\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n      submitQuiz();\r\n    }\r\n  };\r\n\r\n  const submitQuiz = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/quiz/results', { score });\r\n    } catch (error) {\r\n      console.error(\"Error submitting quiz results\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      {showScore ? (\r\n        <div className=\"score-section\">\r\n          <h2>Your Score: {score} / {questions.length}</h2>\r\n          <button onClick={() => navigate('/')}>Go Home</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Progress Bar */}\r\n          <div className=\"progress-container\">\r\n            <div \r\n              className=\"progress-bar\" \r\n              style={{ width: `${((currentQuestion + 1) / questions.length) * 100}%` }}\r\n            ></div>\r\n          </div>\r\n\r\n          <h2>{questions[currentQuestion].question}</h2>\r\n          <ul className=\"quiz-options\">\r\n            {questions[currentQuestion].options.map((option, index) => (\r\n              <li key={index} onClick={() => handleAnswer(index)}>\r\n                {option}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}